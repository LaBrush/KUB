{% extends 'KubCollaborationBundle::layout.html.twig' %}

{% set organisateur = projet.organisateur %}

{% block content %}

	<h3 class="section-title">Liste des taches</h3>
	
	<article class="article">

		<ul>
			
			{% for listeTaches in organisateur.listeTaches %}
				<li class="liste-taches">

					<h4 for="{{ listeTaches.id }}l">{{ listeTaches }}</h4>
					<input 
						type="checkbox" 
						id="{{ listeTaches.id }}l"
						class="liste-check"
					>
					<ul>
						{% for tache in listeTaches.taches %}
							<li class="tache">
								<input 
									type="checkbox" 
									id="{{ tache.id }}t" 
									{% if tache.done %}checked{% endif %} 
								>
								<label for="{{ tache.id }}t" class="{{ tache.id }}t">{{ tache }}</label>
								<a class="voir" href="{{ path('kub_collaboration_organisation_show', { projet_slug: projet.slug, tache_slug: tache.slug }) }}">Voir</a>
							</li>
						{% endfor %}
					</ul>
					
				</li>
			{% else %}
				<li>Il n'y a rien Ã  faire (pour l'instant)</li>
			{% endfor %}

		</ul>

		<a href="{{ path('kub_collaboration_organisation_create', { slug: projet.slug }) }}" class="button-yes">Ajouter une tache</a>

	</article>

{% endblock %}

{% block js %}
	
	<script type="text/javascript" src="{{ asset('ressources/select2/select2.min.js') }}"></script>
	<link rel="stylesheet" href="{{ asset('ressources/select2/select2.css') }}" />
	
	<script type="text/javascript">
		$(document).ready(function($) {
			$('#kub_collaborationbundle_tache_participants').select2();
			$('#kub_collaborationbundle_tache_ressources').select2();
			$('#kub_collaborationbundle_tache_fichiers').select2();

			$('input.liste-check').change(function(){
				var $that = $(this), checked = $that.prop('checked');

				$(this).parent().find('.tache input')
					.prop('checked', checked);
			});

			$('.tache input').change(function(){

				var $that = $(this), $parent = $that.parent().parent().parent().children('input');

				$.ajax({
					url: "{{path('kub_api_collaboration_organisation_tache_check')}}",
					data: {
						'id': parseInt($that.attr('id')),
						'checked': 0 + $that.prop('checked')
					},
					type: "POST",
					timeout: 3000
				});


				var $taches = $(
					'#' + $parent.attr('id')
				).parent().find('.tache input');

				var allChecked = true ;
				$taches.each(function(){

					if(!$(this).prop('checked')){ allChecked = false; };

				});

				allChecked ? $parent.prop('checked', true) : $parent.prop('checked', false) ;
			}).first().change();

			$('.tache>input:checkbox').change(function() {

				var checked = $(this).prop('checked');
				var label = $(this).parent().children('.' + $(this).attr('id'));

				if (checked)
				{
					label.addClass('checked').removeClass('unchecked');
				}
				else
				{
					label.addClass('unchecked').removeClass('checked');
				}
			}).change();
		});
	</script>

{% endblock %}

{##}